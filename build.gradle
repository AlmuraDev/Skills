import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'org.spongepowered.plugin' version '0.8.1'
    id 'net.minecrell.licenser' version '0.3'
    id 'nu.studer.jooq' version '3.0.0'
}

group = project.group
version = project.version
description = project.description

defaultTasks 'clean', 'licenseFormat', 'build'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'
archivesBaseName = project.name.toLowerCase()

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name = 'oss-sonatype-public'
        url = 'https://oss.sonatype.org/content/repositories/public/'
    }
    maven {
        name = 'sponge'
        url = 'http://repo.spongepowered.org/maven'
    }
}

dependencies {
    compile "com.almuradev:droplet:${project.dropletVersion}"
    compile "com.almuradev:toolbox:${project.toolboxVersion}"
    compile "org.spongepowered:spongeapi:${project.spongeAPIVersion}"
    compile "net.objecthunter:exp4j:${project.expVersion}"
    compile "org.jooq:jooq:${project.jooqVersion}"
    compile "org.jooq:jooq-meta:${project.jooqVersion}"
    compile "org.jooq:jooq-codegen:${project.jooqVersion}"
    jooqRuntime "org.jooq:jooq-meta-extensions:${project.jooqVersion}"
    testCompile "junit:junit:${project.junitVersion}"
}

license {
    header project.file('header.txt')
    include '**/*.java'
    exclude 'src/main/generated/**'
    newLine false
}

processResources {
    filesMatching('**/mcmod.info') {
        filter ReplaceTokens, tokens: [
                'version': project.version
        ]
    }
}

def generatedDir = 'src/main/generated'
sourceSets {
    main {
        java {
            srcDirs += [generatedDir]
        }
    }
}

jooq {
    version = project.jooqVersion
    edition = project.jooqEdition
    ddl(sourceSets.main) {
        generator {
            database {
                name = 'org.jooq.meta.extensions.ddl.DDLDatabase'
                properties {
                    property {
                        key = 'scripts'
                        value = 'src/main/resources/db/database.sql'
                    }
                }

                inputSchema = 'PUBLIC'
                outputSchemaToDefault = true
            }
            generate {
                relations = true
                deprecated = false
                records = true
                immutablePojos = true
                fluentSetters = true
            }
            target {
                packageName = 'org.inspirenxe.skills.generated'
                directory = generatedDir
            }
        }
    }
}

task generateDatabaseClasses() {}
generateDatabaseClasses.dependsOn 'generateDdlJooqSchemaSource'

task cleanDatabaseClasses() {
    doLast {
        project.file(generatedDir).deleteDir()
    }
}
generateDdlJooqSchemaSource.dependsOn 'cleanDatabaseClasses'

project.tasks.getByName('compileJava').dependsOn -= 'generateDdlJooqSchemaSource'
