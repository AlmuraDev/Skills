/*
 * This file is part of Skills, licensed under the MIT License (MIT).
 *
 * Copyright (c) InspireNXE <https://github.com/InspireNXE/>
 * Copyright (c) contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
/*
 * This file is generated by jOOQ.
*/
package org.inspirenxe.skills.impl.database.generated.tables.records;


import org.inspirenxe.skills.impl.database.generated.tables.SqliteSequence;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.4"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class SqliteSequenceRecord extends TableRecordImpl<SqliteSequenceRecord> implements Record2<Object, Object> {

    private static final long serialVersionUID = 1860861533;

    /**
     * Create a detached SqliteSequenceRecord
     */
    public SqliteSequenceRecord() {
        super(SqliteSequence.SQLITE_SEQUENCE);
    }

    /**
     * Create a detached, initialised SqliteSequenceRecord
     */
    public SqliteSequenceRecord(Object name, Object seq) {
        super(SqliteSequence.SQLITE_SEQUENCE);

        set(0, name);
        set(1, seq);
    }

    /**
     * Getter for <code>sqlite_sequence.name</code>.
     */
    public Object getName() {
        return (Object) get(0);
    }

    /**
     * Setter for <code>sqlite_sequence.name</code>.
     */
    public void setName(Object value) {
        set(0, value);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>sqlite_sequence.seq</code>.
     */
    public Object getSeq() {
        return (Object) get(1);
    }

    /**
     * Setter for <code>sqlite_sequence.seq</code>.
     */
    public void setSeq(Object value) {
        set(1, value);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Object, Object> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Object, Object> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Object> field1() {
        return SqliteSequence.SQLITE_SEQUENCE.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Object> field2() {
        return SqliteSequence.SQLITE_SEQUENCE.SEQ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Object value1() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Object value2() {
        return getSeq();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SqliteSequenceRecord value1(Object value) {
        setName(value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public SqliteSequenceRecord value2(Object value) {
        setSeq(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SqliteSequenceRecord values(Object value1, Object value2) {
        value1(value1);
        value2(value2);
        return this;
    }
}
